package ru.tpu.hostel.internal.utils;

import lombok.AccessLevel;
import lombok.AllArgsConstructor;
import lombok.Getter;
import lombok.NoArgsConstructor;

import java.util.Collections;
import java.util.Set;
import java.util.UUID;

/**
 * –ö–æ–Ω—Ç–µ–∫—Å—Ç –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è –∑–∞–ø—Ä–æ—Å–∞ —Å–µ—Ä–≤–∏—Å–æ–º. –°–æ–¥–µ—Ä–∂–∏—Ç –≤ —Å–µ–±–µ {@code userID, userRoles, traceID, spanID}
 *
 * <p>üí°–°–æ–∑–¥–∞–≤–∞—Ç—å –≤ —Å–∞–º–æ–º –Ω–∞—á–∞–ª–µ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è –∑–∞–ø—Ä–æ—Å–∞/—Å–æ–æ–±—â–µ–Ω–∏—è, –æ—á–∏—â–∞—Ç—å –≤ –∫–æ–Ω—Ü–µ –≤ {@code finally} –±–ª–æ–∫–µ.
 * <pre><code>
 *     ExecutionContext.create(userId, roles, traceId, spanId); // –∏–ª–∏ ExecutionContext.create();
 *
 *     try {
 *         // –ª–æ–≥–∏–∫–∞ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è
 *     } catch() {
 *         // –¥–µ–π—Å—Ç–≤–∏—è –ø—Ä–∏ –æ—à–∏–±–∫–µ
 *     } finally {
 *         ExecutionContext.clear(); // –û–ë–Ø–ó–ê–¢–ï–õ–¨–ù–û
 *     }
 * </code></pre>
 *
 * @author –ò–ª—å—è –õ–∞–ø—à–∏–Ω
 * @version 1.0.0
 * @since 1.0.0
 */
@NoArgsConstructor(access = AccessLevel.PRIVATE)
@AllArgsConstructor(access = AccessLevel.PRIVATE)
public final class ExecutionContext {

    private static final ThreadLocal<ExecutionContext> CONTEXT_HOLDER = new ThreadLocal<>();

    @Getter
    private UUID userID;

    private Set<Roles> userRoles;

    @Getter
    private String traceId;

    @Getter
    private String spanId;

    /**
     * –°–æ–∑–¥–∞–µ—Ç –ø—É—Å—Ç–æ–π –∫–æ–Ω—Ç–µ–∫—Å—Ç
     *
     * @return —Å–æ–∑–¥–∞–Ω–Ω—ã–π –∫–æ–Ω—Ç–µ–∫—Å—Ç
     * @since 1.0.0
     */
    public static ExecutionContext create() {
        if (CONTEXT_HOLDER.get() != null) {
            return CONTEXT_HOLDER.get();
        }
        ExecutionContext context = new ExecutionContext();
        CONTEXT_HOLDER.set(context);
        return context;
    }

    /**
     * –°–æ–∑–¥–∞–µ—Ç –∫–æ–Ω—Ç–µ–∫—Å—Ç —Å –ø–æ–ª–Ω—ã–º –Ω–∞–±–æ—Ä–æ–º –ø–∞—Ä–∞–º–µ—Ç—Ä–æ–≤
     *
     * @param userID    ID —é–∑–µ—Ä–∞, –æ—Ç–ø—Ä–∞–≤–∏–≤—à–µ–≥–æ –∑–∞–ø—Ä–æ—Å
     * @param userRoles —Ä–æ–ª–∏ —é–∑–µ—Ä–∞, –æ—Ç–ø—Ä–∞–≤–∏–≤—à–µ–≥–æ –∑–∞–ø—Ä–æ—Å
     * @param traceId   ID —Ç—Ä–∞—Å—Å–∏—Ä–æ–≤–∫–∏
     * @param spanId    ID —Å–ø–∞–Ω–∞
     * @return —Å–æ–∑–¥–∞–Ω–Ω—ã–π –∫–æ–Ω—Ç–µ–∫—Å—Ç
     * @since 1.0.0
     */
    public static ExecutionContext create(UUID userID, Set<Roles> userRoles, String traceId, String spanId) {
        if (CONTEXT_HOLDER.get() != null) {
            return CONTEXT_HOLDER.get();
        }
        ExecutionContext context = new ExecutionContext(userID, userRoles, traceId, spanId);
        CONTEXT_HOLDER.set(context);
        return context;
    }

    /**
     * –í–æ–∑–≤—Ä–∞—â–∞–µ—Ç —Ç–µ–∫—É—â–∏–π –∫–æ–Ω—Ç–µ–∫—Å—Ç
     *
     * @return —Ç–µ–∫—É—â–∏–π –∫–æ–Ω—Ç–µ–∫—Å—Ç
     * @since 1.0.0
     */
    public static ExecutionContext get() {
        return CONTEXT_HOLDER.get();
    }

    /**
     * –û—á–∏—â–∞–µ—Ç —Ç–µ–∫—É—â–∏–π –∫–æ–Ω—Ç–µ–∫—Å—Ç.
     *
     * <p>üí°–û–±—è–∑–∞—Ç–µ–ª—å–Ω–æ –≤—ã–ø–æ–ª–Ω—è—Ç—å, –µ—Å–ª–∏ –∫–æ–Ω—Ç–µ–∫—Å—Ç —Å–æ–∑–¥–∞–≤–∞–ª—Å—è. –í—ã–∑—ã–≤–∞—Ç—å –≤ {@code finally} –±–ª–æ–∫–µ</p>
     *
     * @since 1.0.0
     */
    public static void clear() {
        CONTEXT_HOLDER.remove();
    }

    public Set<Roles> getUserRoles() {
        return this.userRoles == null
                ? Collections.emptySet()
                : Collections.unmodifiableSet(this.userRoles);
    }

}